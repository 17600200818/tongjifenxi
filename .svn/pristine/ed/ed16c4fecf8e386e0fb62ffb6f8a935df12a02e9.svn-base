<?phpini_set('error_reporting',		'E_ALL');ini_set('max_execution_time',	'0');ini_set("memory_limit",			"-1");ini_set('display_errors',		'on');ini_set('log_errors',			'on');define('BASE_PATH', dirname(__FILE__));date_default_timezone_set('PRC');set_include_path(implode(PATH_SEPARATOR, array(BASE_PATH, BASE_PATH."/../lib/", get_include_path())));require_once("db.php");require_once("comm.php");require_once("redis.lib.php");require_once("frontLogs.php");require_once("monitorLogs.php");require_once("exchangeLogs.php");$startRunTime = time();$serviceFile = __FILE__;$pathParts	 = pathinfo($serviceFile);$serviceName = str_ireplace('.php', '', $pathParts['basename']);$pidFile = sprintf("%s/%s.pid", BASE_PATH, $serviceName);$arrCfg = parse_ini_file(BASE_PATH."/".$serviceName.".ini", true);checkServiceExists();$logPath	= sprintf("%s/../%s", BASE_PATH, $arrCfg['stat']['logpath']);$outPath	= sprintf("%s/../%s", BASE_PATH, $arrCfg['stat']['outpath']);$tmpPath	= sprintf("%s/../%s", BASE_PATH, $arrCfg['stat']['tmppath']);$errPath	= sprintf("%s/../%s", BASE_PATH, $arrCfg['stat']['errpath']);$bakPath	= sprintf("%s/../%s", BASE_PATH, $arrCfg['stat']['bakpath']);if (!is_dir($logPath)){    system("mkdir -p ".$logPath);    system("chmod -R 755 ".$logPath);}//一次执行读日志文件个数$readFileNum = intval($arrCfg['stat']['readFileNum']);//  load redis param11$redisList = explode(',', $arrCfg['stat']['redis']);//print_r($redisList);$arrResult = $arrError = $arrFinishFiles = array();$arrFile = scandir($logPath);print_r(sprintf("[%s] scandir: %s\t[%d]\n", date("H:i:s"), $logPath, count($arrFile)-2));if (!empty($arrFile) && count($arrFile) > 2) {    sort($arrFile);    $processFileNum = 0;    $loadParamFlag = false;    foreach ($arrFile as $key => $filename) {        if($filename == '.' || $filename == '..'){            continue;        }        if($loadParamFlag == false){            $loadParamFlag = true;            loadParam();        }        if(strstr($filename, "front")){            $fileType = 1;        }else if(strstr($filename, "exchange")){            $fileType = 2;        }else if(strstr($filename, "monitor")){            $fileType = 3;        }else if(strstr($filename, "cookie")){            $fileType = 4;        }else{            $fileType = 9;        }        if ($processFileNum >= $readFileNum){            break;        }        $processFileNum++;        $emptyLine = 0;        $logFile = sprintf("%s/%s", $logPath, $filename);        $filesize = number_format(filesize($logFile)/1024, 2, '.', '');        //输出文件信息        print_r(sprintf("[%s] stat [%02d]: %s\t[%01.2fK]\n", date("H:i:s"), $processFileNum, $filename, $filesize));        $handle = @fopen($logFile, "r");        if ($handle) {            while (!feof($handle)) {                $line = fgets($handle, 4096);                if(empty($line)){                    $emptyLine++;                    if ($emptyLine > 100){                        break;                    }                    continue;                }                $arrRow = explode(chr(2), $line);                if(count($arrRow) < 5){                    continue;                }                $rtn = 0;                $time = time();                //获取日志类型1111                $logType = intval($arrRow[0]);                if ($logType == 1) {    //  流量来源日志(front server记录)                    $rtn = parseSourceLog($arrRow);                }else if ($logType == 2) {    //  流量发送日志(exchange server记录)                    $rtn = parseBuyerRequestLog($arrRow);                }else if ($logType == 3) {    //  买方回复的日志(exchange server记录)                    $rtn = parseBuyerResponseLog($arrRow);                }else if ($logType == 4) {    //  买方竞价成功的日志(exchange server记录)                    $rtn = parseBuyerBidSuccessLog($arrRow);                }else if ($logType == 5) {    //  广告曝光日志(exchange server记录)                    $rtn = parseViewLog($arrRow);                }else if ($logType == 6) {    //  点击日志(监测server记录)                    $rtn = parseClickLog($arrRow);                }else if ($logType == 7) {    //  winnotice日志(exchange server记录)                    $rtn = parseViewLog($arrRow);                }else{                    $rtn = $fileType*10000 + 1;                }                //输出错误                if($rtn%10 != 0) {                    writeErrorLogs($rtn, $time);                }                $arrError[$rtn]++;            }            fclose($handle);            $arrFinishFiles[] = $logFile;        }    }}if(!empty($arrErrFile)){    foreach($arrErrFile as $h){        gzclose($h);    }    print_r("\r\n----------------- arrError start\r\n");    print_r($arrError);    print_r("\r\n----------------- arrError end\r\n");}if (!empty($arrFinishFiles)){    if (!is_dir($bakPath)){        system("mkdir -p ".$bakPath);        system("chmod -R 755 ".$bakPath);    }    foreach ($arrFinishFiles as $logFile) {        if (file_exists($logFile)){            $cmd = sprintf("mv %s %s", $logFile, $bakPath);            exec($cmd);        }    }}//print_r($arrResult);if (!empty($arrResult)) {    //	加入历史统计的数据    reset($arrResult);    foreach ($arrResult as $dbName=>$v1) {        foreach ($v1 as $tableName=>$v2) {            foreach ($v2 as $date => $v) {                loadCache($dbName, $tableName, $date);            }        }    }    //print_r($arrResult);    //	记录缓存，输出结果文件    reset($arrResult);    foreach ($arrResult as $dbName=>$v1) {        foreach ($v1 as $tableName=>$v2) {            foreach ($v2 as $date => $v) {                if($dbName == "adx_report"){                    if ($tableName == "summary_day") {                        foreach ($v as $sellerId => $val1) {                            $view = $arrResult["adx_report_sell"]["summary_day"][$date][$sellerId]["view"];                            foreach ($val1 as $buyerId => $val2) {                                $v[$sellerId][$buyerId]['view'] = $view;                            }                        }                    }else if($tableName == "place_day"){                        foreach ($v as $placeId => $val1) {                            //读取卖方库广告位view结果  插入到运营库广告表view中                            $view = $arrResult["adx_report_sell"]["place_day"][$date][$placeId]["view"];                            foreach ($val1 as $buyerId => $val2) {                                $v[$placeId][$buyerId]["view"] = $view;                            }                        }                    }                }                writeCache($dbName, $tableName, $date, $v);            }        }    }//    print_r($arrResult);}if (file_exists($pidFile)){    unlink($pidFile);}$useTime = time()-$startRunTime;print_r(sprintf("[%s] ---------- used $useTime second, finished.\nc:%s", date("H:i:s"), $useTime));die();/** *  函数: *  描述: 将历史数据的汇总结果加载到内存中 *  输入: *  输出: **/function loadCache($dbName, $tableName, $date){    global $arrResult, $tmpPath;    $time = strtotime($date);    $cacheDir = sprintf("%s/%s", $tmpPath, date("Ym/d", $time));    $cacheFile = sprintf("%s/%s.%s.%s", $cacheDir, $dbName, $tableName, $date);    if (!file_exists($cacheFile)) {        return true;    }    print_r(sprintf("[%s] loadCache %s %s %s\n", date("H:i:s"), $dbName, $tableName, $date));    $json = file_get_contents($cacheFile);    $history = json_decode($json, true);    if($dbName == "adx_report_sell"){        if($tableName == "media_day"){            foreach($history as $placeId => $val) {                foreach($val as $k => $v){                    $arrResult[$dbName][$tableName][$date][$placeId][$k] += $v;                }            }        }else if($tableName == "media_hour"){            foreach($history as $hour => $val) {                foreach($val as $mediaId => $v1) {                    foreach($v1 as $tagid => $v2) {                        foreach($v2 as $size => $v3){                            foreach($v3 as $k => $v){                                $arrResult[$dbName][$tableName][$date][$hour][$mediaId][$tagid][$size][$k] += $v;                            }                        }                    }                }            }        }else if($tableName == "place_day"){            foreach($history as $placeId => $val) {                foreach($val as $k => $v){                    $arrResult[$dbName][$tableName][$date][$placeId][$k] += $v;                }            }        }else if($tableName == "summary_day"){            foreach($history as $sellerId => $val) {                foreach($val as $k => $v){                    $arrResult[$dbName][$tableName][$date][$sellerId][$k] += $v;                }            }        }else if($tableName == "size_day"){            foreach($history as $sellerId => $val) {                foreach($val as $w=> $val1) {                    foreach($val1 as $h=> $val2) {                        foreach($val2 as $k => $v){                            if($k != "w" && $k != "h"){                                $arrResult[$dbName][$tableName][$date][$sellerId][$w][$h][$k] += $v;                            }else{                                $arrResult[$dbName][$tableName][$date][$sellerId][$w][$h][$k] = $v;                            }                        }                    }                }            }        }    }else if($dbName == "adx_report_buy"){        if($tableName == "summary_day"){                foreach($history as $buyerId => $val) {                    foreach($val as $k => $v){                        $arrResult[$dbName][$tableName][$date][$buyerId][$k] += $v;                    }                }        }    }else if($dbName == "adx_report"){        if($tableName == "summary_day"){            foreach($history as $sellerId => $val1) {                foreach($val1 as $buyerId => $val) {                    foreach($val as $k => $v){                        $arrResult[$dbName][$tableName][$date][$sellerId][$buyerId][$k] += $v;                    }                }            }        }else if($tableName == "place_day"){            foreach($history as $placeId => $val1) {                foreach($val1 as $buyerId => $val) {                    foreach($val as $k => $v){                        $arrResult[$dbName][$tableName][$date][$placeId][$buyerId][$k] += $v;                    }                }            }        }else if($tableName == "place_hour"){            foreach($history as $hour => $val1) {                break;/*                foreach($val1 as $placeId => $val2) {                    foreach($val2 as $buyerId => $val3) {                        foreach($val3 as $k => $v){                            $arrResult[$dbName][$tableName][$date][$hour][$placeId][$buyerId][$k] += $v;                        }                    }                }*/            }        }else if($tableName == "failure_day"){            foreach($history as $buyerId => $val) {                foreach($val as $placeId => $val1) {                    foreach($val1 as $crId => $v2){                        foreach($v2 as $errId => $v22){                            foreach($v22 as $k => $v){                                $arrResult[$dbName][$tableName][$date][$buyerId][$placeId][$crId][$errId][$k] += $v;                            }                        }                    }                }            }        }    }    return true;}/** *  函数: *  描述: 将有变化的数据，汇总的结果存入文件中 *  输入: *  输出: **/function writeCache($dbName, $tableName, $date, $data){    global $outPath, $tmpPath, $startRunTime;    if (empty($data)) {        return true;    }    if (!is_dir($tmpPath)) {        system("mkdir -p " . $tmpPath);        system("chmod -R 755 " . $tmpPath);    }    if (!is_dir($outPath)) {        system("mkdir -p " . $outPath);        system("chmod -R 755 " . $outPath);    }    $time = strtotime($date);    $cacheDir = sprintf("%s/%s", $tmpPath, date("Ym/d", $time));    if (!file_exists($cacheDir)) {        system("mkdir -p " . $cacheDir);    }    $cacheFile = sprintf("%s/%s.%s.%s", $cacheDir, $dbName, $tableName, $date);    $resultFile = sprintf("%s.%s.%s.%s", $dbName, $tableName, $date, date("YmdHis", $startRunTime));    $tmpFile = sprintf("%s/%s.tmp", $tmpPath, $resultFile);    $outFile = sprintf("%s/%s", $outPath, $resultFile);    print_r(sprintf("[%s] writeCache %s %s %s\n", date("H:i:s"), $dbName, $tableName, $date));    file_put_contents($cacheFile, json_encode($data)."\n");    $cmd = sprintf("cp %s %s", $cacheFile, $tmpFile);    system($cmd);    $cmd = sprintf("chmod 666 %s", $tmpFile);    system($cmd);    $cmd = sprintf("mv %s %s", $tmpFile, $outFile);    system($cmd);    return true;}?>